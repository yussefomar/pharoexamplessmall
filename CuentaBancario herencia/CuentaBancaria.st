Object subclass: #Cuenta	instanceVariableNames: 'saldo'	classVariableNames: ''	poolDictionaries: ''	category: 'CuentaBancaria'!!Cuenta methodsFor: 'as yet unclassified' stamp: 'yussef 4/3/2017 22:34'!initializesaldo:=0.! !!Cuenta methodsFor: 'as yet unclassified' stamp: 'yussef 4/5/2017 14:04'!getSaldo^saldo.! !!Cuenta methodsFor: 'as yet unclassified' stamp: 'yussef 4/5/2017 14:04'!depositar:monto (monto<=0)ifTrue:[MontoInvalido new signal.].saldo:=saldo + monto .! !!Cuenta methodsFor: 'as yet unclassified' stamp: 'yussef 4/3/2017 22:21'!extraer:montoself subclassResponsibility .! !Cuenta subclass: #CuentaAhorro	instanceVariableNames: 'numero'	classVariableNames: ''	poolDictionaries: ''	category: 'CuentaBancaria'!!CuentaAhorro methodsFor: 'as yet unclassified' stamp: 'yussef 4/5/2017 14:05'!initializesuper initialize.! !!CuentaAhorro methodsFor: 'as yet unclassified' stamp: 'yussef 4/5/2017 15:02'!setNumero: unNumeronumero:=unNumero .! !!CuentaAhorro methodsFor: 'as yet unclassified' stamp: 'yussef 4/5/2017 15:04'!extraer: unMonto(unMonto<0)ifTrue:[MontoInvalido new signal. ].(saldo< unMonto)ifTrue:[SaldoInsuficiente new signal].saldo:= saldo- unMonto. ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CuentaAhorro class	instanceVariableNames: ''!!CuentaAhorro class methodsFor: 'as yet unclassified' stamp: 'yussef 4/5/2017 14:07'!crearConNumero:unNumero| unaCuenta |unaCuenta:=CuentaAhorro new.unaCuenta setNumero:unNumero.^unaCuenta .! !Cuenta subclass: #CuentaCorriente	instanceVariableNames: 'numeroCuenta descubierto'	classVariableNames: ''	poolDictionaries: ''	category: 'CuentaBancaria'!!CuentaCorriente methodsFor: 'as yet unclassified' stamp: 'yussef 4/3/2017 22:35'!initializedescubierto:=3000.super initialize.! !!CuentaCorriente methodsFor: 'as yet unclassified' stamp: 'yussef 4/3/2017 22:20'!setNumeroCuenta: unNumeronumeroCuenta:=unNumero .! !!CuentaCorriente methodsFor: 'as yet unclassified' stamp: 'yussef 4/5/2017 14:24'!extraer:unMonto(unMonto<=0)ifTrue: [MontoInvalido new signal. ]. (saldo + descubierto < unMonto )ifTrue:[SaldoInsuficiente new signal.].saldo:= saldo    - unMonto  ."äcordarse que el saldo puede ser negativo en este caso como es cuenta                              corriente hasta 3000 de negatividad."! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CuentaCorriente class	instanceVariableNames: ''!!CuentaCorriente class methodsFor: 'as yet unclassified' stamp: 'yussef 4/5/2017 13:31'!crearConNumero: unNumero| unaCuentaCorriente |unaCuentaCorriente:= CuentaCorriente new.unaCuentaCorriente setNumeroCuenta:unNumero.^unaCuentaCorriente ! !Error subclass: #MontoInvalido	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CuentaBancaria'!TestCase subclass: #PruebasBancarias	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CuentaBancaria'!!PruebasBancarias methodsFor: 'as yet unclassified' stamp: 'yussef 4/5/2017 15:05'!testCuentaAhorroExtraerMayorQueSuSaldo| unaCuentaAhorro |unaCuentaAhorro:=CuentaAhorro crearConNumero: 100.unaCuentaAhorro depositar: 100.self should:[unaCuentaAhorro extraer: 300 ]raise:(SaldoInsuficiente )! !!PruebasBancarias methodsFor: 'as yet unclassified' stamp: 'yussef 4/5/2017 14:26'!testCuentaCorrienteExtraeUnMontoMayoraSaldo| unCuentaCorriente |unCuentaCorriente:=CuentaCorriente crearConNumero:6000.unCuentaCorriente depositar:100.unCuentaCorriente extraer:3100.self assert:(unCuentaCorriente getSaldo = -3000 ).! !!PruebasBancarias methodsFor: 'as yet unclassified' stamp: 'yussef 4/5/2017 15:10'!testCuentaCorrienteDepositarInvalido| unaCuentaCorriente |unaCuentaCorriente:=CuentaCorriente crearConNumero: 23333.self should:[unaCuentaCorriente depositar: -10]raise:(MontoInvalido ).! !Error subclass: #SaldoInsuficiente	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CuentaBancaria'!